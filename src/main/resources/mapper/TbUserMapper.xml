<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.sqx.emos.wx.mapper.TbUserMapper">
    <!-- TODO 查询 -->
    <!-- 查询是否为超级管理员 -->
    <select id="haveRootUser" resultType="boolean">
        SELECT IF(COUNT(*), TRUE, FALSE)
        FROM tb_user
        WHERE root = 1;
    </select>

    <!-- 查询用户ID -->
    <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
        SELECT id
        FROM tb_user
        WHERE open_id = #{openId}
          AND status = 1
    </select>

    <!-- 查询权限 -->
    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.status = 1;
    </select>

    <!-- 查询用户信息 -->
    <select id="searchById" parameterType="int" resultType="cn.org.sqx.emos.wx.domain.TbUser">
        SELECT id,
               open_id,
               nickname,
               photo,
               name,
               sex,
               tel,
               email,
               hiredate,
               role,
               root,
               dept_id,
               status,
               create_time
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1;
    </select>

    <!-- 查询员工的姓名与部门 -->
    <select id="searchNameAndDept" parameterType="int" resultType="HashMap">
        SELECT u.name, d.dept_name
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <!-- 查询员工的入职日期 -->
    <select id="searchUserHiredate" parameterType="int" resultType="String">
        SELECT hiredate
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1
    </select>

    <!-- 查询用户概要信息 -->
    <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.name, u.photo, d.dept_name AS deptName
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <!-- 查询部门用户 -->
    <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
        d.id AS deptId,
        d.dept_name AS deptName,
        u.id AS userId,
        u.name
        FROM tb_dept d JOIN tb_user u ON u.dept_id = d.id
        WHERE u.status =1
        <if test="keyword!=null">
            AND u.name LIKE '%${keyword}%'
        </if>
        GROUP BY d.id,u.id
    </select>

    <!-- 查询多个成员 -->
    <select id="searchMembers" parameterType="list" resultType="HashMap">
        SELECT id,name,photo
        FROM tb_user
        WHERE status =1 AND id IN
        <foreach collection="list" item="one" separator="," open="(" close=")">
            #{one}
        </foreach>
    </select>

    <!-- TODO 增加 -->
    <!-- 添加保存的用户 -->
    <insert id="insert" parameterType="HashMap">
        INSERT INTO tb_user
        SET
        <if test="openId!=null">
            open_id = #{openId},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
        role = #{role},
        root = #{root},
        <if test="deptName!=null">
            dept_id = ( SELECT id FROM tb_dept WHERE dept_name = #{deptName} ),
        </if>
        status = #{status},
        create_time = #{createTime}
    </insert>
</mapper>
